########################################
自定义global tab的选中状态设置
########################################
:category: Computer
:tags: Python
:date: 2005-02-24 17:00



global tab就是页面上logo下方的一排标签页。

按照Plone的关于如何自定义Global Tab的说法，得在根上先建一个Folder，然后在portal_actions里增加一个portal_tabs的时候id取和先前建立的Folder一致的short name。我的实验结果是不一定得是Folder，但却是得是在根上。但是我的Blog位置不在根上，所以就无法显示被选中状态。

Global Tabs当然是可以自定义的，位置在ZMI的/portal_skins/plone_templates/global_sections，为其建立一个custom即可修改。

看了看代码，和选中状态有关的部分如下::

    tal:define="selected_tabs python:here.selectedTabs(template_id, here);
                 selected_portal_tab selected_tabs/portal;"
     tal:condition="portal_tabs"
    h5 class="hiddenStructure" i18n:translate="heading_sections"Sections/h5

    ul id="portal-globalnav"
        tal:tabs tal:repeat="tab portal_tabs"
        li tal:attributes="id string:portaltab-${tab/id};
                            class python:test(selected_portal_tab==tab['id'], 'selected', 'plain');"

最后的页面渲染就是由上面代码的最后一句控制的了:输出selected或者plain这两个不同的css id，由此控制显示状态。

代码中的selected_portal_tab,根据引用代码的头两行,应该是从selectedTabs这个函数来。搜索了一下，这个函数定义在CMFPlone/skins/plone_scripts/selectedTabs.py，输入值为默认页面id和一个对象，返回的则是一个dictionary，key为'portal'，value为contentpath[0]，来源为::

 contentpath=context.portal_url.getRelativeContentPath(obj)

这里的obj就应该是模板里的here，估计为当前选中的页的对象。getRelativeContentPath()来自CMFCore/URLTool.py第77行，我看来看去应该是返回的当前路径除去根目录的部分，但是为什么是contentpath[0]?第一个字符？不解...

看来需要仔细读读zope和plone的开发文档。现在只好先把我的Blog移到根上。Plone的cut/paste倒真是很体贴用户:)

遗留一个小问题：“兔说”虽然在根上，但它是一个topic(url是/happy)，搜集/Members/happy下的文章，所以当选中一篇文章阅读时焦点就到了/Members/happy下而非/happy，这时“兔说”这个标签页就又不是选中状态了。

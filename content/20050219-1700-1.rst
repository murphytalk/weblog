####################################################
Slackware installation log
####################################################
:category: Computer
:tags: Linux
:date: 2005-02-19 17:00



04年的笔记。

Partition

 Got /dev/hda3 (1624M) mounted as root and /dev/hda4 (1373M) mounted as /usr.Installed slackware and dropline packages on /usr.

 It is an installation with development enviroment(that is,with gcc and kernel source etc installed) and dropline gnome consumes about 800MB on /usr. /home/murphy is on /dev/hda3.1

 Use reiserfs - so my Linux is *power-off friendly* now ;)

Basic setup

 **bash rc files**

 First of all is to modify /etc/profile,append the following lines::

  alias x='startx'
  export CFLAGS="-O3 -march=i686"
  export CXXFLAGS=$CFLAGS

 An old problem (back to the days using kde) is that xterm would not run my /etc/profile,and also when su.

 Here is why and how (I really should read the man pages):

 Bash runs ~/.bash_profile while it is a login shell(that is,su) and runs .bashrc when it is not a login shell(run xterm). so add the following line both in the 2 files everything would be ok::

  source /etc/profile

 In order to make chinese input work,have to export LANG=en_US.utf(see below),this causes a man pages view throuble in console - all "-" displayed as highlightend 8892 ,this makes the man pages messed up :( in order to work around this,have to append this line in /root/.bashrc::

  export LANG=en_US

 open a terminal,su in it,this non-login shell will run /root/.bashrc. But not so pretty.

 **/etc/fstab**

 ::

  /dev/hda9 swap swap defaults 0 0
  /dev/hda3 / reiserfs defaults 1 1
  /dev/hda4 /usr reiserfs defaults 1 2
  /dev/hda1 /mnt/win ntfs ro,umask=022,utf8 0 0
  /dev/hda5 /mnt/dev ntfs ro,umask=022,utf8 0 0
  /dev/hda6 /mnt/data ntfs ro,umask=022,utf8 0 0
  /dev/hda7 /mnt/cd ntfs ro,umask=022,utf8 0 0
  /dev/hda8 /mnt/bak vfat umask=000 0 0
  /dev/hdc /mnt/cdrom iso9660 noauto,owner,ro,iocharset=gb2312,utf8 0 0
  proc /proc proc defaults 0 0

X Window

 **install dropline gnome**

  Download `dropline installer <http://www.dropline.net/gnome/download.php>`_ first.

 While installing if choosed fam package,need to install portmap(to support rpc) and inet(to support portmap) too.fam is a service to notify applications of file system changes.

 After the installation,maybe need to create a a xinitrc to start gnome : create file xinitrc.gnome under /etc/X11/xinit ,contents is only one line::

  exec gnome-session

 **Configure X windows**

 Above all,get NVIDIA driver for my Geforce2 - the default one comes with XFree86 keeps have a screen offset on my Mitsubishi LCD,while NVIDIA's does well. will download sources from NVIDIA web site and complile automaticlly,so need gcc/make/kernel.*(2003-12-06 after installed a newer gcc version by myself,NVIDIA driver compile tool detects I am using a diffrent version with the one compiles kernel,even I compile kernel by the same new gcc - it is because I still use the old kernel header files,need to do this to tell it doesn't care about gcc version: export IGNORE_CC_MISMATCH=1)*

 1 Comment out the following line in section Module::

   Load "dri"

 2 change Device section of XF86Config::

   Section "Device"
        ### Available Driver options are:-
        ### Values: i: integer, f: float, bool: "True"/"False",
        ### string: "String", freq: "f Hz/kHz/MHz"
        ### [arg]: arg optional
        #Option     "SWcursor"           	# [bool]
        #Option     "HWcursor"           	# [bool]
        #Option     "NoAccel"            	# [bool]
        #Option     "ShowCache"          	# [bool]
        #Option     "ShadowFB"           	# [bool]
        #Option     "UseFBDev"           	# [bool]
        #Option     "Rotate"             	# [str]
        #Option     "VideoKey"           	# i
        #Option     "FlatPanel"          	# [bool]
        #Option     "FPDither"           	# [bool]
        #Option     "CrtcNumber"         	# i
	Identifier  "Card0"
	Driver      "nvidia"
	VendorName  "nVidia Corporation"
	BoardName   "NV11GL [Quadro2 MXR/EX]"
	BusID       "PCI:1:0:0"
   EndSection

 Have to reinstall(recompile indeed) nvidia driver everytime recompile the kernel module,because part of the nivdia driver is a module too,which would be removed while install kernel module.before reinstall should use::

  nvidia-installer --uninstall

 to uninstall it. (how about backup /lib/modules/2.4.23-rc3/kernel/drivers/video/nvidia.o? it might work ... )

 then importantly, change config related to my LCD::

  Section "Monitor"
	DisplaySize  337.9   270.4	# mm
	Identifier   "Monitor0"
	VendorName   "MEL"
	ModelName    "RDT177M"
	Option	     "DPMS"
   	HorizSync    31.5 - 81.1
   	VertRefresh  56-75
  EndSection

 add support to mouse wheel::

  Section "InputDevice"
	Identifier  "Mouse0"
	Driver      "mouse"
	Option	    "Protocol" "imps/2"
	Option	    "Device" "/dev/mouse"
	Option	    "ZAxisMapping" "4 5"
	Option	    "Buttons" "3"
  EndSection

 at last,the screen section,only config what I want::

  Section "Screen"
    	Identifier  "Screen 0"
    	Device      "Card0"
    	Monitor     "Monitor0"
    	DefaultDepth 16

	SubSection "Display"
		Depth     16
        	Modes "1280x1024"
	EndSubSection
  EndSection

 **Make English and Chinese display better**

 Use "Bitstream Vera Fonts"

 /etc/fonts/local.font::

  ?xml version="1.0"?
  !DOCTYPE fontconfig SYSTEM "fonts.dtd"
  !-- /etc/fonts.conf file to configure system font access --
  fontconfig
        !--  Enable sub-pixel rendering
        match target="font"
                test qual="all" name="rgba"
                        constunknown/const
                /test
                edit name="rgba" mode="assign"constrgb/const/edit
        /match
         --

        alias
                familyserif/family
                prefer
                        familyBitstream Vera Serif/family
                /prefer
        /alias
        alias
                familysans-serif/family
                prefer
                        familyBitstream Vera Sans/family
                /prefer
        /alias
        alias
                familymonospace/family
                prefer
                        familyBitstream Vera Sans Mono/family
                /prefer
        /alias
  /fontconfig

 select this serif and sans serif font in Firefox.

Chinese Support

 1 Chinese fonts

  use xft to render TTF : just copy windows fonts(simsun) to /usr/X11/lib/fonts/TTF [1], then run fc-cache. Firefox can show chinese now,but looks ugly,because of the original freetype2 doesn't read bitmaped font of chinese TTF(I guess). use "firefly's patch":ftp://cle.linux.org.tw/pub/CLE/devel/wjwu/slackware/slackware-9.1/extra/Fonts_Solution/ (Even only has simsun installed,big5 chinese and even japanese can been viewed too,according to a post by firefly,simsun.ttc contains all Asian fonts.*But firefly's patch hurts performance of X Windows very much. A far more better solution is to disable Anti Alias of Chinese fonts in xft - see /etc/fonts/local.font*)

 2 Chinese input

  use "scim": ,install from its rpm packages (PROBLEM:rpm2tgz seems not works on it),the input method platform scim-0.8.2-1.i586.rpm and a pinyin implementation on this platform scim-chinese-0.2.6-1.i586.rpm. in order to make gtk2 application be aware of scim,need to install scim-gtk2-immodule-0.8.2.i586.rpm too,after that,run::

   gtk-query-immodules-2.0  /etc/gtk-2.0/gtk.immodules

  scim seems only works while LANG (or LC_TYPE indeed) is zh_CN or en_US.utf8.in order to keep the desktop be in English,I choose the later one: insert the following lines at the begining of /etc/X11/xinit/xinitrc.gnome::

   scim -d
   export XMODIFIERS=@im=SCIM
   export GTK_IM_MODULES=xim

  Except Chinese locale,scim only works with en_US.utf8,so have to create this locale::

   localedef -v -c -i en_US -f UTF-8 en_US.UTF-8

  !!!! but for one time this seems doen't work,suspect it is beacuse the en_US.utf-8 creating problem.slackware installs a en_IS.utf8,set locale to that seems better.Append this command at the end of /etc/profile::

   export LANG=en_IN.utf8

  but this will mess up man pages in console,see **basic setup** section bash rc files for a workaround.

Application

 **checkinstall**

Keep records of your installation,make it possible to uninstall cleanly.can create slackware package too.
get it from `here <http://asic-linux.com.mx/~izto/checkinstall>`_ .

 How to use:

 1 uncompress source of application

 2 put a file named description-pak in make directory,this is your package description

 3 supports preinstall, postinstall, preremove and postremove scripts too.just put these scipt files in make directory::

    preinstall-pak,postinstall-pak,preremove-pak,postremove-pak

 4 configure and make application(from source) as before

 5 run checkinstall,answer questions ... will have choice to create packages for redhat,slackware and debian.

 Great software!

 **vim with gtk2 support**

 not officially released yet,grabbed the cvs source::

  cvs -z3 -d:pserver:anonymous@cvs.vim.sf.net:/cvsroot/vim checkout vim

 except x windows and glibc2,gtk2 stuff,termcap and ncurses are needed also. (configure script will cache its check results!!!) configure::

  ./configure --prefix=/usr --disable-gpm --enable-pythoninterp --enable-xim --enable-multibyte

 vim stores global vimrc in /usr/share/vim,INSTALL says do like this to put it in /etc/ ::

  make VIMRCLOC=/etc VIMRUNTIMEDIR=/usr/share/vim MAKE="make -e"

 found an insteresting issue : seems gvim is only a symbol link to vim,so vim must check the launch command line to decide to show gui or not ;)

 contents of my vimrc::

  " Use Vim settings, rather then Vi settings (much better!).
  " This must be first, because it changes other options as a side effect.
  set nocompatible
  syntax on
  "allow backspacing over everything in insert mode
  set backspace=indent,eol,start
  "highlight search pattern
  "set hlsearch
  set ruler
  set visualbell
  set guifont="Courier New 11"
  color murphy

 the default "make install" doest not copy vim log images except you have kde installed,so add the following lines under the "installruntime" rule of src/Makefile::

  $(INSTALL_DATA) $(SCRIPTSOURCE)/vim48x48.png $(VIMLOC)
  $(INSTALL_DATA) $(SCRIPTSOURCE)/vim32x32.png $(VIMLOC)
  $(INSTALL_DATA) $(SCRIPTSOURCE)/vim16x16.png $(VIMLOC)
  $(INSTALL_DATA) vimrc $(VIMLOC)

 do not install menu language recources,comment out all actions of target install-languages.

 **gaim**

  dropline's gaim package seems broken - or gaim needs a weird ssl support:whether try to install dropline's package or compile gaim from source,keep getting complain of no ssl - although openssl installed correctly.

  downloaded a "patch built using OpenSSL for Gaims SSL layer" from linuxpackages.net ;) (which needs gtkspell,also found there).

 **grub**

 ::

   mkdir /boot/grub
   cp /usr/share/grub/i386-pc/stage{1,2} /boot/grub
   cp /usr/share/grub/i386-pc/reiserfs_stage1_5 /boot/grub

   find /boot/grub/stage1

   root (hd0,2)
   setup (hd0,2

Hardware and kernel config

 **CD-R**

 kernel 2.4.x needs emulate IDE CDR as a SCSI device in order to burn CDs.so make sure the following issues while config kernel::

  ATA/IDE part - Enable SCSI emulation support
  SCSI part - Enable SCSI support,SCSI CDROM support

 **NIC**

 Slackware's netconfig is supposed to create a rc.netdevice file under /etc/rc.d,but it didn't happen to my box,so in order to make slackware's DHCP client work,have to config hotplug support in kernel.

 **Sound support**

 ALSA 0.98 won't compile on kernel 2.4.23-rc3,complains a structure defined twice times.so have to go back to kernel's sound driver. check sound support and es1371 as modules,then comment out the es1371 line in /etc/rc.d/rc.modules.compile kernel and restart : bingo!

 Found it's easier than ALSA ... but kernel 2.6 is going to employ ALSA as its sound architecture ...

 **NAT and firewall support**

 config kernel as the following::

  Network options menu
	  Network packet filtering:                         Y
	  Unix domain sockets:                              Y or M
	  TCP/IP networking:                                Y
	  IP: advanced router:                              Y
	  IP: verbose route monitoring:                     Y (log handled by klogd)
	  IP: TCP Explicit Congestion Notification support: Y
	  IP: TCP syncookie support:                        Y
	  IP: Netfilter Configuration menu
	    Every option except:                            Y or M
	      ipchains (2.2-style) support                  N
	      ipfwadm (2.0-style) support                   N
	  Fast switching:                                   N

 /etc/rc.d/rc.firewall: forwarding of Web,Zope Management,BitTorrent,eMule,Messenger file transfer and ssh supported::

  # Begin $rc_base/init.d/firewall

  # Insert iptables modules (not needed if built into the kernel).

  ADSL=eth1
  LAN=eth0

  modprobe ip_tables
  modprobe iptable_filter
  modprobe ip_conntrack
  modprobe ip_conntrack_ftp
  modprobe ipt_state
  modprobe iptable_nat
  modprobe ip_nat_ftp
  modprobe ipt_MASQUERADE
  modprobe ipt_LOG
  modprobe ipt_REJECT

  # allow local and  LAN connections
  iptables -A INPUT  -i lo -j ACCEPT
  iptables -A INPUT  -i $LAN -j ACCEPT
  # for MSN
  iptables -A INPUT -i $ADSL -p tcp --dport 6891 -j ACCEPT
  iptables -A INPUT -i $ADSL -p tcp --dport 6990 -j ACCEPT
  # allow eMule connection
  iptables -A INPUT -i $ADSL -p tcp --dport 4662 -j ACCEPT
  iptables -A INPUT -i $ADSL -p tcp --dport 4242 -j ACCEPT
  iptables -A INPUT -i $ADSL -p tcp --dport 4711 -j ACCEPT
  iptables -A INPUT -i $ADSL -p tcp --dport 9165 -j ACCEPT
  iptables -A INPUT -i $ADSL -p udp --dport 9178 -j ACCEPT
  # allow BT connection
  iptables -A INPUT -i $ADSL -p tcp --dport 6881:6889 -j ACCEPT

  # allow some services : web,zope management,ssh
  iptables -A INPUT -i $ADSL -p tcp --dport 80 -j ACCEPT
  iptables -A INPUT -i $ADSL -p tcp --dport 8080 -j ACCEPT
  iptables -A INPUT -i $ADSL -p tcp --dport 22 -j ACCEPT

  # only allow answers on already established connections
  # and permit new connections related to established ones
  #iptables -A INPUT -i ppp -m state --state ESTABLISHED,RELATED -j ACCEPT
  iptables -A INPUT -i $ADSL -m state --state ESTABLISHED,RELATED -j ACCEPT

  # free output on any interface to any ip for any service
  iptables -A OUTPUT -j ACCEPT

  # mapping messenger file transfer
  iptables -t nat -A PREROUTING -p tcp --dport 6891 -i $ADSL -j DNAT --to 192.168.0.100:6891
  iptables -t nat -A PREROUTING -p tcp --dport 6990 -i $ADSL -j DNAT --to 192.168.0.100:6990
  # mapping eMule connections
  iptables -t nat -A PREROUTING -p tcp --dport 4662 -i $ADSL -j DNAT --to 192.168.0.100:4662
  iptables -t nat -A PREROUTING -p tcp --dport 4711 -i $ADSL -j DNAT --to 192.168.0.100:4711
  iptables -t nat -A PREROUTING -p tcp --dport 4242 -i $ADSL -j DNAT --to 192.168.0.100:4242
  iptables -t nat -A PREROUTING -p tcp --dport 9165 -i $ADSL -j DNAT --to 192.168.0.100:9165
  iptables -t nat -A PREROUTING -p udp --dport 9178 -i $ADSL -j DNAT --to 192.168.0.100:9178
  # mapping BT connections
  iptables -t nat -A PREROUTING -p tcp --dport 6881:6889 -i $ADSL -j DNAT --to 192.168.0.100

  # allow forwarding
  iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
  #iptables -A FORWARD -m state --state NEW -i ! ppp+	 -j ACCEPT
  iptables -A FORWARD -m state --state NEW -i ! $ADSL+	 -j ACCEPT
  # forwading eMule
  iptables -A FORWARD -i $ADSL -p tcp -m multiport --dport 4242,4661,4662 -j ACCEPT
  iptables -A FORWARD -i $ADSL -p udp -m multiport --dport 4661,4662,4772,9178 -j ACCEPT
  iptables -A FORWARD -i $ADSL -p tcp -m multiport --dport 4711 -j ACCEPT
  # forwading BT
  iptables -A FORWARD -i $ADSL -p tcp --dport 6881:6889 -j ACCEPT


  # do masquerading    (not needed if intranet is not using private ip-addresses)
  #iptables -t nat -A POSTROUTING -o ppp+ -j MASQUERADE
  iptables -t nat -A POSTROUTING -o $ADSL+ -j MASQUERADE

  # Log everything for debugging (last of all rules, but before DROP/REJECT)
  #iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT  "
  #iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD"
  #iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

  # set a sane policy
  iptables -P INPUT   DROP
  iptables -P FORWARD DROP
  iptables -P OUTPUT  DROP

  # be verbose on dynamic ip-addresses (not needed in case of static IP)
  echo 2  /proc/sys/net/ipv4/ip_dynaddr

  # disable ExplicitCongestionNotification
  echo 0  /proc/sys/net/ipv4/tcp_ecn

  # activate TCPsyncookies
  #echo 1  /proc/sys/net/ipv4/tcp_syncookies

  # activate Route-Verification = IP-Spoofing_protection
  for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
  	echo 1  $f
  done

  # activate IP-Forwarding
  echo 1  /proc/sys/net/ipv4/ip_forward

Kernel 2.6.x

 **Config and build kernel**

 slackware 9.1 comes with a pretty old procps(2.0.x),but kernel 2.6.0-test11 needs at least procps v3.1.13,so downloaded v3.1.14,and used checkinstall to make a package

 filesystem language only needs cp936(gb2312),and define default codepage as gb2312.

 **sawp partition**

 kernel 2.6.x uses a new "style" swap partition,need to initialize it::

  /sbin/mkswap -v1 /dev/hda9

 **patch NVIDIA driver**

 NVIDIA's driver only supports kernel 2.4.x now,http://www.minion.de/ has patches to it.

 need to download NVIDIA_kernel-1.0-4496-2.6.diff.

 NVIDIA's driver is consists of kernel module and X module,this is only a kernel module patch,so have to install nvidia driver first in kernel 2.4.x.(the file nvidia_drv.o)

 install the patch,the following is copied from its readme::

  2) install the kernel module (as root):

	   # sh NVIDIA-Linux-x86-1.0-4496-pkg0.run --extract-only
	   # cd NVIDIA-Linux-x86-1.0-4496-pkg0
	   # cd usr/src/nv
	   # patch -p1  ../../../../NVIDIA_kernel-1.0-4496-2.6.diff
	   # ln -s Makefile.kbuild Makefile
	   # make install

  The instructions assume that you are running the target kernel. If that
  is not the case, you can still build the kernel module for that kernel,
  but since the KBUILD Makefile only respects the KERNDIR directive when
  it builds the module, you'll have to install the module manually; as an
  example (instead of 'make install'):
	   # cp nvidia.ko /lib/modules/linux-2.6.0-test9/kernel/drivers/video
	   # depmod -a 2.6.0-test9


 **sound support**

 kernel 2.6.x employs ALSA as its default sound solution,because GNOME uses OSS device,so have to compile OSS emulation. add following lines into /etc/modprobe.conf::

  #ALSA
  alias	char-major-116 snd
  alias	snd-card-0 snd-ens1371

  #OSS/Free portion
  alias char-major-14 soundcore
  alias sound-slot-0 snd-card-0

  # card #1
  alias sound-service-0-0 snd-mixer-oss
  alias sound-service-0-1 snd-seq-oss
  alias sound-service-0-3 snd-pcm-oss
  alias sound-service-0-8 snd-seq-oss
  alias sound-service-0-12 snd-pcm-oss

 then add modprobe to sound device in /etc/rc.d/rc.module (see Item 5)...but how can these moduels be loaded automatically?

 It seems need not do the following steps if have gnome-media installed),after that,download and install alsa-utils,and maybe alsa-lib.alsa mute sound device by default,so have to save sound device settings and load it when boot:in /etc/rc.d/rc.local, append::

  /usr/sbin/alsactl restore

 in /etc/rc.d/rc.6, insert::

  /usr/sbin/alsactl restore

 at the begining.

 **modify /etc/rc.d/rc.module**

 with 2.6.x,the following modules do not use anymore:apm,ide-scsi,in order to be compatible with kernel 2.4.x,should do a version check::

  if uname -a | grep "2.4"  /dev/null; then
       #/sbin/modprobe XXXX
  fi

 ALSA used in kernel 2.6.x by default,so change the sound drive load part in /etc/rc.d/rc.module::

  if uname -a | grep "2.4"  /dev/null; then
       /sbin/modprobe es1371
  fi

 now I compile ps2 mouse support as a module,should load this module. another problem is that hotplug cannot detect my NIC anymore,have to load it manually. kernle 2.6.x now uses /etc/modprobe.conf to define alias,append NIC alias to it::

  alias eth0 8139too
  //alias eth1 8139too

 then append the following lines at the end of etc/rc.d/rc.module to load modules metioned above::

  if uname -a | grep "2.6"  /dev/null; then
       /sbin/modprobe psmouse
       /sbin/modprobe eth0
       /sbin/modprobe snd-card-0
  fi

KDE

 **Background color**

 I like GNOME's desktop color ::

  		Hue	Saturation	Value		Red	Green	Blue	HTML
  top		246	68		75		57	55	75	#39374B
  bottom	228	137		143		66	82	143	#42528F


.. [1] or ~/.font,which is only for current user.other dir is ok too,but have to add them into /etc/fonts/fonts.dir